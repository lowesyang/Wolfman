{"version":3,"sources":["login.js"],"names":[],"mappings":"AAAA,IAAI,SAAO,QAAQ,SAAR,EAAmB,MAAnB,EAAX;AACA,IAAI,SAAO,QAAQ,UAAR,CAAX;AACA,IAAI,SAAO,OAAO,EAAlB;IACI,UAAQ,OAAO,OADnB;;AAGA,OAAO,IAAP,CAAY,QAAZ,EAAqB,UAAS,GAAT,EAAa,GAAb,EAAiB;AAClC,QAAI,SAAO;AACP,kBAAS,IAAI,IAAJ,CAAS,QADX;AAEP,kBAAS,QAAQ,IAAI,IAAJ,CAAS,MAAjB;AAFF,KAAX;AAIA,WAAO,KAAP,CAAa,qDAAb,EACI,CAAC,OAAO,QAAR,EAAiB,OAAO,QAAxB,CADJ,EACsC,UAAS,GAAT,EAAa,IAAb,EAAkB;AAChD,YAAG,GAAH,EAAO;AACH,mBAAO,IAAI,IAAJ,CAAS;AACZ,sBAAK,CADO;AAEZ,qBAAI,IAAI,QAAJ;AAFQ,aAAT,CAAP;AAIH;AACD,YAAG,KAAK,CAAL,CAAH,EAAW;AACP,gBAAI,QAAM,QAAQ,EAAC,UAAS,OAAO,QAAjB,EAAR,CAAV;AACA,gBAAI,IAAJ,CAAS;AACL,sBAAK,CADA;AAEL,uBAAM,KAFD;AAGL,qBAAI;AAHC,aAAT;AAKH,SAPD,MAQI;AACA,gBAAI,IAAJ,CAAS;AACL,sBAAK,CADA;AAEL,qBAAI;AAFC,aAAT;AAIH;AACJ,KAtBL;AAuBH,CA5BD;;AA8BA,OAAO,IAAP,CAAY,WAAZ,EAAwB,UAAS,GAAT,EAAa,GAAb,EAAiB;AACrC,QAAI,SAAO;AACP,kBAAS,IAAI,IAAJ,CAAS,QADX;AAEP,kBAAS,IAAI,IAAJ,CAAS,MAFX;AAGP,kBAAS,IAAI,IAAJ,CAAS;AAHX,KAAX;AAKA,QAAG,OAAO,QAAP,IAAiB,OAAO,QAA3B,EAAoC;AAChC,eAAO,IAAI,IAAJ,CAAS;AACZ,kBAAK,CADO;AAEZ,iBAAI;AAFQ,SAAT,CAAP;AAIH;;AAED,WAAO,KAAP,CAAa,sCAAb,EAAoD,CAAC,OAAO,QAAR,CAApD,EAAsE,UAAS,GAAT,EAAa,IAAb,EAAkB;AACpF,YAAG,GAAH,EAAO;AACH,mBAAO,IAAI,IAAJ,CAAS;AACZ,sBAAK,CADO;AAEZ,qBAAI,IAAI,QAAJ;AAFQ,aAAT,CAAP;AAIH;;AAED,YAAG,KAAK,CAAL,CAAH,EAAW;AACP,mBAAO,IAAI,IAAJ,CAAS;AACZ,sBAAK,CADO;AAEZ,qBAAI;AAFQ,aAAT,CAAP;AAIH,SALD,MAMI;AACA,mBAAO,KAAP,CAAa,mDAAb,EACI,CAAC,OAAO,QAAR,EAAiB,QAAQ,OAAO,QAAf,CAAjB,CADJ,EAC+C,UAAS,GAAT,EAAa,IAAb,EAAkB;AACzD,oBAAG,GAAH,EAAO;AACH,2BAAO,IAAI,IAAJ,CAAS;AACZ,8BAAK,CADO;AAEZ,6BAAI,IAAI,QAAJ;AAFQ,qBAAT,CAAP;AAIH;;AAED,oBAAG,IAAH,EAAQ;AACJ,wBAAI,QAAM,QAAQ,EAAC,UAAS,OAAO,QAAjB,EAAR,CAAV;AACA,2BAAO,IAAI,IAAJ,CAAS;AACZ,8BAAK,CADO;AAEZ,+BAAM,KAFM;AAGZ,6BAAI;AAHQ,qBAAT,CAAP;AAKH,iBAPD,MAQI;AACA,2BAAO,IAAI,IAAJ,CAAS;AACZ,8BAAK,CADO;AAEZ,6BAAI;AAFQ,qBAAT,CAAP;AAIH;AACJ,aAvBL;AAwBH;AACJ,KAxCD;AAyCH,CAtDD;;AAwDA,OAAO,OAAP,GAAe,MAAf","file":"login-compiled.js","sourcesContent":["var router=require(\"express\").Router();\r\nvar config=require(\"./config\");\r\nvar client=config.db,\r\n    encrypt=config.encrypt;\r\n\r\nrouter.post('/login',function(req,res){\r\n    var result={\r\n        userName:req.body.userName,\r\n        password:encrypt(req.body.psword)\r\n    };\r\n    client.query(\"select * from users where userName=? and password=?\",\r\n        [result.userName,result.password],function(err,data){\r\n            if(err){\r\n                return res.json({\r\n                    code:1,\r\n                    msg:err.toString()\r\n                })\r\n            }\r\n            if(data[0]){\r\n                var token=encrypt({userName:result.userName});\r\n                res.json({\r\n                    code:0,\r\n                    token:token,\r\n                    msg:\"登录成功!\"\r\n                })\r\n            }\r\n            else{\r\n                res.json({\r\n                    code:1,\r\n                    msg:\"用户名或密码错误!\"\r\n                })\r\n            }\r\n        })\r\n});\r\n\r\nrouter.post('/register',function(req,res){\r\n    var result={\r\n        userName:req.body.userName,\r\n        password:req.body.psword,\r\n        cfpsword:req.body.cfpsword\r\n    };\r\n    if(result.password!=result.cfpsword){\r\n        return res.json({\r\n            code:1,\r\n            msg:\"两次密码输入不一致!\"\r\n        })\r\n    }\r\n\r\n    client.query(\"select * from users where userName=?\",[result.userName],function(err,data){\r\n        if(err){\r\n            return res.json({\r\n                code:1,\r\n                msg:err.toString()\r\n            })\r\n        }\r\n\r\n        if(data[0]){\r\n            return res.json({\r\n                code:1,\r\n                msg:\"该用户名已存在!\"\r\n            })\r\n        }\r\n        else{\r\n            client.query(\"insert into users(userName,password) values (?,?)\",\r\n                [result.userName,encrypt(result.password)],function(err,resp){\r\n                    if(err){\r\n                        return res.json({\r\n                            code:1,\r\n                            msg:err.toString()\r\n                        })\r\n                    }\r\n\r\n                    if(resp){\r\n                        var token=encrypt({userName:result.userName});\r\n                        return res.json({\r\n                            code:0,\r\n                            token:token,\r\n                            msg:\"注册成功!\"\r\n                        })\r\n                    }\r\n                    else{\r\n                        return res.json({\r\n                            code:1,\r\n                            msg:\"注册失败.请检查网络配置!\"\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    })\r\n});\r\n\r\nmodule.exports=router;\r\n"]}