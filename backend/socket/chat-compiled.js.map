{"version":3,"sources":["chat.js"],"names":[],"mappings":"AAAA,IAAI,QAAM,QAAQ,OAAR,CAAV;AACA,IAAI,KAAG,QAAQ,IAAR,CAAP;AACA,IAAI,SAAO,MAAM,YAAN,CAAmB;AAC1B,SAAI,GAAG,YAAH,CAAgB,mBAAhB,CADsB;AAE1B,UAAK,GAAG,YAAH,CAAgB,mBAAhB;AAFqB,CAAnB,EAGR,MAHQ,CAGD,IAHC,CAAX;AAIA,IAAI,YAAU,QAAQ,IAAR,EAAc,MAA5B;AACA,IAAI,KAAG,IAAI,SAAJ,CAAc,EAAC,QAAO,MAAR,EAAd,CAAP;AACA,IAAI,QAAM,EAAV;;;;;;;;;;AAUA,GAAG,EAAH,CAAM,YAAN,EAAmB,UAAS,IAAT,EAAc;;AAE7B,SAAK,EAAL,CAAQ,SAAR,EAAkB,UAAS,OAAT,EAAiB;AAC/B,YAAI,UAAQ,KAAK,KAAL,CAAW,OAAX,CAAZ;AACA,YAAI,SAAO,QAAQ,GAAR,CAAY,MAAvB;AACA,YAAG,CAAC,MAAM,MAAN,CAAJ,EAAkB;;AAEd,kBAAM,MAAN,IAAc;AACV,0BAAS,EADC,EAAd;AAGH;;AACD,YAAG,QAAQ,IAAR,IAAc,MAAjB,EAAwB;AACpB,iBAAK,QAAL,GAAc;AACV,yBAAQ,QAAQ,GAAR,CAAY,QADV;AAEV,wBAAO;AAFG,aAAd;AAIA,gBAAG,MAAM,MAAN,EAAc,QAAd,CAAuB,MAAvB,GAA8B,EAAjC,EAAoC;AAChC,sBAAM,MAAN,EAAc,QAAd,CAAuB,IAAvB,CAA4B,IAA5B;AACH,aAFD,MAGI;AACA,uBAAO,KAAK,IAAL,CAAU,KAAK,SAAL,CAAe;AAC5B,0BAAK;AADuB,iBAAf,CAAV,CAAP;AAGH;AACJ;AACD,YAAG,QAAQ,IAAR,IAAc,WAAjB,EACI,UAAU,MAAV,EAAiB,QAAQ,GAAR,CAAY,OAA7B,EAAqC,WAArC;;AAEJ,YAAG,QAAQ,IAAR,IAAc,OAAjB,EAA0B;AACtB,sBAAU,MAAV,EAAkB,QAAQ,GAAR,CAAY,KAA9B,EAAqC,OAArC;AACH;AAEJ,KA9BD;;AAgCA,SAAK,EAAL,CAAQ,OAAR,EAAgB,YAAU;AACtB,YAAI,WAAS,MAAM,KAAK,QAAL,CAAc,MAApB,EAA4B,QAAzC;AACA,iBAAS,MAAT,CAAgB,SAAS,OAAT,CAAiB,IAAjB,CAAhB,EAAuC,CAAvC;AACA,cAAM,KAAK,QAAL,CAAc,MAApB,EAA4B,QAA5B,GAAqC,QAArC;AACH,KAJD;;AAMA,aAAS,SAAT,CAAmB,MAAnB,EAA0B,GAA1B,EAA8B,IAA9B,EAAmC;AAC/B,YAAI,WAAS,MAAM,MAAN,EAAc,QAA3B;AACA,aAAI,IAAI,IAAE,CAAV,EAAY,IAAE,SAAS,MAAvB,EAA8B,GAA9B,EAAkC;AAC9B,gBAAG,SAAS,CAAT,KAAa,IAAhB,EAAsB;AAClB,yBAAS,CAAT,EAAY,IAAZ,CAAiB,KAAK,SAAL,CAAe;AAC5B,0BAAM,IADsB;AAE5B,yBAAK;AACD,iCAAS;AADR;AAFuB,iBAAf,CAAjB;AAMH;AACJ;AACJ;AACJ,CArDD","file":"chat-compiled.js","sourcesContent":["var https=require(\"https\");\r\nvar fs=require(\"fs\");\r\nvar server=https.createServer({\r\n    key:fs.readFileSync(\"../ssl/server.key\"),\r\n    cert:fs.readFileSync(\"../ssl/server.crt\")\r\n}).listen(9503);\r\nvar websocket=require(\"ws\").Server;\r\nvar ws=new websocket({server:server});\r\nvar rooms=[];\r\n\r\n//---------聊天室 rooms[key]结构\r\n//  userList:[] 在该房间内的玩家列表，包括各自的信息\r\n\r\n//---------message结构\r\n//  type: 事件类型，有\"broadcast\"(广播事件)\r\n//        \"sync\"(信息同步事件),\"audio\"(音频通讯事件)\r\n//  res: 传输的消息,包含用户名称，座位ID。\r\n\r\nws.on('connection',function(conn){\r\n\r\n    conn.on('message',function(message){\r\n        var msgJson=JSON.parse(message);\r\n        var roomID=msgJson.res.roomID;\r\n        if(!rooms[roomID]){\r\n            //create\r\n            rooms[roomID]={\r\n                userList:[],    // 玩家列表，用于广播\r\n            }\r\n        }\r\n        if(msgJson.type==\"sync\"){\r\n            conn.userInfo={\r\n                usrName:msgJson.res.userName,\r\n                roomID:roomID\r\n            };\r\n            if(rooms[roomID].userList.length<18){\r\n                rooms[roomID].userList.push(conn);\r\n            }\r\n            else{\r\n                return conn.send(JSON.stringify({\r\n                    type:\"reject\"\r\n                }))\r\n            }\r\n        }\r\n        if(msgJson.type==\"broadcast\")\r\n            broadcast(roomID,msgJson.res.message,\"broadcast\");\r\n\r\n        if(msgJson.type==\"audio\") {\r\n            broadcast(roomID, msgJson.res.audio, \"audio\");\r\n        }\r\n\r\n    });\r\n\r\n    conn.on('close',function(){\r\n        var userList=rooms[conn.userInfo.roomID].userList;\r\n        userList.splice(userList.indexOf(conn),1);\r\n        rooms[conn.userInfo.roomID].userList=userList;\r\n    })\r\n\r\n    function broadcast(roomID,msg,type){\r\n        var userList=rooms[roomID].userList;\r\n        for(var i=0;i<userList.length;i++){\r\n            if(userList[i]!=conn) {\r\n                userList[i].send(JSON.stringify({\r\n                    type: type,\r\n                    res: {\r\n                        message: msg\r\n                    }\r\n                }))\r\n            }\r\n        }\r\n    }\r\n})\r\n"]}